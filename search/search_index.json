{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u7b80\u4ecb Minecraft Launcher Lib(MLL)\u662f\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684Python\u5e93\uff0c\u5b83\u7528\u4e8e\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u6211\u7684\u4e16\u754c\u542f\u52a8\u5668 \u5982\u4f55\u5b89\u88c5 \u6559\u7a0b \u5f00\u59cb\u5165\u95e8 \uff08\u672a\u7ffb\u8bd1\uff09 \u5fae\u8f6f\u767b\u5f55 \uff08\u672a\u7ffb\u8bd1\uff09 \u83b7\u53d6\u5b89\u88c5\u8fdb\u5ea6 \uff08\u672a\u7ffb\u8bd1\uff09 \u66f4\u591a\u542f\u52a8\u65b9\u5f0f \uff08\u672a\u7ffb\u8bd1\uff09 \u81ea\u52a8\u5b89\u88c5Forge \uff08\u672a\u7ffb\u8bd1\uff09 \u81ea\u52a8\u5b89\u88c5Fabric \uff08\u672a\u7ffb\u8bd1\uff09 \u83b7\u53d6\u66f4\u591a\u4fe1\u606f \uff08\u672a\u7ffb\u8bd1\uff09 \u6a21\u5757 \u547d\u4ee4 \uff08\u672a\u7ffb\u8bd1\uff09 \u5b89\u88c5 \uff08\u672a\u7ffb\u8bd1\uff09 natives \uff08\u672a\u7ffb\u8bd1\uff09 \u8d26\u53f7 \uff08\u672a\u7ffb\u8bd1\uff09 \u5fae\u8f6f\u8d26\u6237 \uff08\u672a\u7ffb\u8bd1\uff09 \u5de5\u5177 \uff08\u672a\u7ffb\u8bd1\uff09 Forge\u76f8\u5173 \uff08\u672a\u7ffb\u8bd1\uff09 fabric\u76f8\u5173 \uff08\u672a\u7ffb\u8bd1\uff09 Runtime \uff08\u672a\u7ffb\u8bd1\uff09 \u5176\u4ed6 \uff08\u672a\u7ffb\u8bd1\uff09 \u95ee\u7b54 \uff08\u672a\u7ffb\u8bd1\uff09 \u6392\u67e5\u6545\u969c \uff08\u672a\u7ffb\u8bd1\uff09 \u5f15\u7528\u672c\u5e93 \uff08\u672a\u7ffb\u8bd1\uff09 \u66f4\u65b0\u65e5\u5fd7 \uff08\u7528\u4e0d\u5230\u7ffb\u8bd1\uff09 4.1 4.0 3.6 3.5 3.4 3.3 3.2 3.1 3.0 2.1 2.0 1.4 1.3 1.2 1.1 1.0 0.5 0.4 0.3 0.2 0.1 \u4e0b\u4e00\u9875 \u00a9 \u7248\u6743\u6240\u5c5e2019-2021, JakobDev. \u7248\u672c\u53f7 560a7d2c","title":"\u7b80\u4ecb"},{"location":"#_1","text":"Minecraft Launcher Lib(MLL)\u662f\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684Python\u5e93\uff0c\u5b83\u7528\u4e8e\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u6211\u7684\u4e16\u754c\u542f\u52a8\u5668 \u5982\u4f55\u5b89\u88c5 \u6559\u7a0b \u5f00\u59cb\u5165\u95e8 \uff08\u672a\u7ffb\u8bd1\uff09 \u5fae\u8f6f\u767b\u5f55 \uff08\u672a\u7ffb\u8bd1\uff09 \u83b7\u53d6\u5b89\u88c5\u8fdb\u5ea6 \uff08\u672a\u7ffb\u8bd1\uff09 \u66f4\u591a\u542f\u52a8\u65b9\u5f0f \uff08\u672a\u7ffb\u8bd1\uff09 \u81ea\u52a8\u5b89\u88c5Forge \uff08\u672a\u7ffb\u8bd1\uff09 \u81ea\u52a8\u5b89\u88c5Fabric \uff08\u672a\u7ffb\u8bd1\uff09 \u83b7\u53d6\u66f4\u591a\u4fe1\u606f \uff08\u672a\u7ffb\u8bd1\uff09 \u6a21\u5757 \u547d\u4ee4 \uff08\u672a\u7ffb\u8bd1\uff09 \u5b89\u88c5 \uff08\u672a\u7ffb\u8bd1\uff09 natives \uff08\u672a\u7ffb\u8bd1\uff09 \u8d26\u53f7 \uff08\u672a\u7ffb\u8bd1\uff09 \u5fae\u8f6f\u8d26\u6237 \uff08\u672a\u7ffb\u8bd1\uff09 \u5de5\u5177 \uff08\u672a\u7ffb\u8bd1\uff09 Forge\u76f8\u5173 \uff08\u672a\u7ffb\u8bd1\uff09 fabric\u76f8\u5173 \uff08\u672a\u7ffb\u8bd1\uff09 Runtime \uff08\u672a\u7ffb\u8bd1\uff09 \u5176\u4ed6 \uff08\u672a\u7ffb\u8bd1\uff09 \u95ee\u7b54 \uff08\u672a\u7ffb\u8bd1\uff09 \u6392\u67e5\u6545\u969c \uff08\u672a\u7ffb\u8bd1\uff09 \u5f15\u7528\u672c\u5e93 \uff08\u672a\u7ffb\u8bd1\uff09 \u66f4\u65b0\u65e5\u5fd7 \uff08\u7528\u4e0d\u5230\u7ffb\u8bd1\uff09 4.1 4.0 3.6 3.5 3.4 3.3 3.2 3.1 3.0 2.1 2.0 1.4 1.3 1.2 1.1 1.0 0.5 0.4 0.3 0.2 0.1 \u4e0b\u4e00\u9875 \u00a9 \u7248\u6743\u6240\u5c5e2019-2021, JakobDev. \u7248\u672c\u53f7 560a7d2c","title":"\u7b80\u4ecb"},{"location":"%E5%AE%89%E8%A3%85/","text":"\u5b89\u88c5 \u8fd9\u6709\u4e24\u79cd\u9014\u5f84\u53bb\u5b89\u88c5Minecraft Launcher Lib\u3002 pip \u4e0e\u5176\u4ed6\u7684Python\u5e93\u4e00\u6837\uff0cMLL\u5e93\u53ef\u4ee5\u76f4\u63a5\u4ece PyPI \u4e0b\u8f7d. \u6211\u63a8\u8350\u4f60\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u53bb\u5b89\u88c5\u3002 pip install -U minecraft-launcher-lib \u4ece\u6e90\u4ee3\u7801\u5b89\u88c5 \u60a8\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4ece\u6e90\u4ee3\u7801\u5b89\u88c5MLL\u3002\u8fd9\u53ef\u4ee5\u8ba9\u4f60\u6700\u5feb\u7684\u4f53\u9a8c\u5230\u65b0\u7684\u6a21\u5757\u3002\u4f46\u5982\u679c\u4f60\u4e0d\u9700\u8981\u8fd9\u4e9b\u6a21\u5757\uff0c\u4e0d\u63a8\u8350\u8fd9\u6837\u505a\u3002 pip install -U git+https://gitlab.com/JakobDev/minecraft-launcher-lib.git","title":"\u5b89\u88c5"},{"location":"%E5%AE%89%E8%A3%85/#_1","text":"\u8fd9\u6709\u4e24\u79cd\u9014\u5f84\u53bb\u5b89\u88c5Minecraft Launcher Lib\u3002 pip \u4e0e\u5176\u4ed6\u7684Python\u5e93\u4e00\u6837\uff0cMLL\u5e93\u53ef\u4ee5\u76f4\u63a5\u4ece PyPI \u4e0b\u8f7d. \u6211\u63a8\u8350\u4f60\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u53bb\u5b89\u88c5\u3002 pip install -U minecraft-launcher-lib \u4ece\u6e90\u4ee3\u7801\u5b89\u88c5 \u60a8\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4ece\u6e90\u4ee3\u7801\u5b89\u88c5MLL\u3002\u8fd9\u53ef\u4ee5\u8ba9\u4f60\u6700\u5feb\u7684\u4f53\u9a8c\u5230\u65b0\u7684\u6a21\u5757\u3002\u4f46\u5982\u679c\u4f60\u4e0d\u9700\u8981\u8fd9\u4e9b\u6a21\u5757\uff0c\u4e0d\u63a8\u8350\u8fd9\u6837\u505a\u3002 pip install -U git+https://gitlab.com/JakobDev/minecraft-launcher-lib.git","title":"\u5b89\u88c5"},{"location":"%E6%95%99%E7%A8%8B/%E5%BC%80%E5%A7%8B%E5%85%A5%E9%97%A8/","text":"\u5f00\u59cb\u5165\u95e8 \u6587\u6863\u7684\u7b2c\u4e00\u7bc7\u5c06\u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5\u548c\u8fd0\u884cMinecraft\u3002\u8fd9\u91cc\u8df3\u8fc7\u4e86\u5fae\u8f6f\u767b\u5f55\u3002 Minecraft\u6839\u76ee\u5f55 \u60f3\u8981\u5f00\u59cb\u4f7f\u7528MLL\u5e93\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u4e00\u4e2a.minecraft\u76ee\u5f55\u3002\u6211\u4eec\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2aMinecraft\u76ee\u5f55\u6216\u8005\u4f7f\u7528\u9ed8\u8ba4\u76ee\u5f55\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528minecraft_launcher_lib.utils.get_minecraft_directory()\u83b7\u53d6\u9ed8\u8ba4\u76ee\u5f55\u3002 # \u83b7\u53d6\u60a8\u7cfb\u7edf\u7684\u9ed8\u8ba4Minecraft\u76ee\u5f55 minecraft_directory = minecraft_launcher_lib.utils.get_minecraft_directory() # \u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4f60\u81ea\u5df1\u7684\u76ee\u5f55 # minecraft_directory = \"\u8def\u5f84/\u5230/\u4f60\u7684/.minecraft/\u6587\u4ef6\u5939\" # \u6bd4\u5982 minecraft_directory = \"D:/PCL/.minecraft\" \u5b89\u88c5Minecraft \u5728\u4f60\u542f\u52a8Minecraft\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5148\u5b89\u88c5\u5b83. \u8fd9\u53ef\u4ee5\u4f7f\u7528 install_minecraft_version \u547d\u4ee4\u5b8c\u6210. Let\u2019s say we want to install Version 1.17 in our Minecraft Directory. minecraft_launcher_lib.install.install_minecraft_version(\"1.17\", minecraft_directory) To get the information how to install Minecraft, minecraft-launcher-lib looks first for a JSON file in your Minecraft Directory. In the case of 1.17 it\u2019s minecraft_directory/versions/1.17/1.17.json. This allows installing moded versions that are not official from Mojang. If the JSON file not does exists minecraft-launcher-lib tries to download it from the Mojang Servers. install_minecraft_version ensures that the Minecraft installation is correct, so you need to call it every time before you launch Minecraft, even if you had the version already installed. Get Minecraft Versions If you don\u2019t want to start a single version like 1.17 every time you need a list of all Minecraft version. To get that list use minecraft_launcher_lib.utils.get_available_versions(minecraft_directory). It returns this list: [ { \"id\": \"some_id\", \"type\": \"release\" }, { \"id\": \"some_other_id\", \"type\": \"snapshot\" } ] The id is the Minecraft version that can be used as argument for install_minecraft_version and other versions. The type says what type the version is. Possible values are: release, snapshot, beta, alpha. To get the latest version, use get_latest_version(). latest_release = minecraft_launcher_lib.utils.get_latest_version()[\"release\"] latest_snapshot = minecraft_launcher_lib.utils.get_latest_version()[\"snapshot\"] Launch Minecraft Since you know how to install Minecraft, it\u2019s now time to start it. First we need a dict with all options. The minimal options dict is this: { \"username\": \"The Username\", \"uuid\": \"The UUID\", \"token\": \"The acces token\" } The Username and UUID belongs to a Account. Since Name and UUID are public, the Token is used to log in. The token is generated every time when a User logs in with his Microsoft Account. Minecraft can be launched with a not existing user and a wrong token. This can be used for test cases. minecraft-launcher-lib allows creating a dict with a test user. options = minecraft_launcher_lib.utils.generate_test_options() We use the test options here to keep it simple. The login with Microsoft comes latter. Keep in mind that publishing a Launcher which allows User who haven\u2019t bought Minecraft to play is illegal, so use this only for test cases in development. You can add more options to the dict like the resolution, but this is not needed to launch. Now we have the options, we need to get the Minecraft command. In this case for Version 1.17. minecraft_command = minecraft_launcher_lib.command.get_minecraft_command(\"1.17\", minecraft_directory, options) The command that your get is a list of strings that can be used to run Minecraft e.g. with the subprocess module.","title":"\u5f00\u59cb\u5165\u95e8"},{"location":"%E6%95%99%E7%A8%8B/%E5%BC%80%E5%A7%8B%E5%85%A5%E9%97%A8/#_1","text":"\u6587\u6863\u7684\u7b2c\u4e00\u7bc7\u5c06\u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5\u548c\u8fd0\u884cMinecraft\u3002\u8fd9\u91cc\u8df3\u8fc7\u4e86\u5fae\u8f6f\u767b\u5f55\u3002","title":"\u5f00\u59cb\u5165\u95e8"},{"location":"%E6%95%99%E7%A8%8B/%E5%BC%80%E5%A7%8B%E5%85%A5%E9%97%A8/#minecraft","text":"\u60f3\u8981\u5f00\u59cb\u4f7f\u7528MLL\u5e93\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u4e00\u4e2a.minecraft\u76ee\u5f55\u3002\u6211\u4eec\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2aMinecraft\u76ee\u5f55\u6216\u8005\u4f7f\u7528\u9ed8\u8ba4\u76ee\u5f55\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528minecraft_launcher_lib.utils.get_minecraft_directory()\u83b7\u53d6\u9ed8\u8ba4\u76ee\u5f55\u3002 # \u83b7\u53d6\u60a8\u7cfb\u7edf\u7684\u9ed8\u8ba4Minecraft\u76ee\u5f55 minecraft_directory = minecraft_launcher_lib.utils.get_minecraft_directory() # \u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4f60\u81ea\u5df1\u7684\u76ee\u5f55 # minecraft_directory = \"\u8def\u5f84/\u5230/\u4f60\u7684/.minecraft/\u6587\u4ef6\u5939\" # \u6bd4\u5982 minecraft_directory = \"D:/PCL/.minecraft\"","title":"Minecraft\u6839\u76ee\u5f55"},{"location":"%E6%95%99%E7%A8%8B/%E5%BC%80%E5%A7%8B%E5%85%A5%E9%97%A8/#minecraft_1","text":"\u5728\u4f60\u542f\u52a8Minecraft\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5148\u5b89\u88c5\u5b83. \u8fd9\u53ef\u4ee5\u4f7f\u7528 install_minecraft_version \u547d\u4ee4\u5b8c\u6210. Let\u2019s say we want to install Version 1.17 in our Minecraft Directory. minecraft_launcher_lib.install.install_minecraft_version(\"1.17\", minecraft_directory) To get the information how to install Minecraft, minecraft-launcher-lib looks first for a JSON file in your Minecraft Directory. In the case of 1.17 it\u2019s minecraft_directory/versions/1.17/1.17.json. This allows installing moded versions that are not official from Mojang. If the JSON file not does exists minecraft-launcher-lib tries to download it from the Mojang Servers. install_minecraft_version ensures that the Minecraft installation is correct, so you need to call it every time before you launch Minecraft, even if you had the version already installed.","title":"\u5b89\u88c5Minecraft"},{"location":"%E6%95%99%E7%A8%8B/%E5%BC%80%E5%A7%8B%E5%85%A5%E9%97%A8/#get-minecraft-versions","text":"If you don\u2019t want to start a single version like 1.17 every time you need a list of all Minecraft version. To get that list use minecraft_launcher_lib.utils.get_available_versions(minecraft_directory). It returns this list: [ { \"id\": \"some_id\", \"type\": \"release\" }, { \"id\": \"some_other_id\", \"type\": \"snapshot\" } ] The id is the Minecraft version that can be used as argument for install_minecraft_version and other versions. The type says what type the version is. Possible values are: release, snapshot, beta, alpha. To get the latest version, use get_latest_version(). latest_release = minecraft_launcher_lib.utils.get_latest_version()[\"release\"] latest_snapshot = minecraft_launcher_lib.utils.get_latest_version()[\"snapshot\"]","title":"Get Minecraft Versions"},{"location":"%E6%95%99%E7%A8%8B/%E5%BC%80%E5%A7%8B%E5%85%A5%E9%97%A8/#launch-minecraft","text":"Since you know how to install Minecraft, it\u2019s now time to start it. First we need a dict with all options. The minimal options dict is this: { \"username\": \"The Username\", \"uuid\": \"The UUID\", \"token\": \"The acces token\" } The Username and UUID belongs to a Account. Since Name and UUID are public, the Token is used to log in. The token is generated every time when a User logs in with his Microsoft Account. Minecraft can be launched with a not existing user and a wrong token. This can be used for test cases. minecraft-launcher-lib allows creating a dict with a test user. options = minecraft_launcher_lib.utils.generate_test_options() We use the test options here to keep it simple. The login with Microsoft comes latter. Keep in mind that publishing a Launcher which allows User who haven\u2019t bought Minecraft to play is illegal, so use this only for test cases in development. You can add more options to the dict like the resolution, but this is not needed to launch. Now we have the options, we need to get the Minecraft command. In this case for Version 1.17. minecraft_command = minecraft_launcher_lib.command.get_minecraft_command(\"1.17\", minecraft_directory, options) The command that your get is a list of strings that can be used to run Minecraft e.g. with the subprocess module.","title":"Launch Minecraft"}]}